{"version":3,"file":"static/js/667.3ab03f15.chunk.js","mappings":"8PAIMA,EAAiB,mCAAG,WAAMC,GAAN,8FAClBC,EADkB,6CAC0BD,EAD1B,oBAFV,mCAEU,qCAGCE,EAAAA,EAAAA,IAAUD,GAHX,cAGhBE,EAHgB,OAIhBC,EAAOD,EAASC,KAEhBC,EAAcD,EAAKE,YACnBC,EAAQH,EAAKG,MACbC,EAAaC,KAAKC,MAA0B,GAApBN,EAAKO,cAC7BC,EAAWR,EAAKQ,SAChBC,EAAST,EAAKS,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACnDC,EAAKd,EAAKc,GAXM,kBAaf,CACLb,YAAAA,EACAE,MAAAA,EACAC,WAAAA,EACAI,SAAAA,EACAC,OAAAA,EACAK,GAAAA,IAnBoB,kCAsBtBC,QAAQC,IAAR,MAtBsB,0DAAH,sD,SCyDvB,EAxDqB,WAAO,IAAD,IACzB,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACTzB,GAAY0B,EAAAA,EAAAA,MAAZ1B,QAEF2B,GAASC,EAAAA,EAAAA,QAAM,oBAACJ,EAASK,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAE9CC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8FACQhC,EAAkBC,GACrBgC,MAAK,SAAA7B,GACJoB,EAAapB,EACd,IACA8B,OAAM,SAAAC,GAAK,OAAIf,QAAQC,IAAIc,EAAhB,IALhB,4CADc,uBAAC,WAAD,wBAQdC,EACD,GAAE,CAACnC,IAEJ,IAAMoC,EAAU,qDAA0Cd,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWjB,aAErE,OACE,iCACE,SAAC,KAAD,CAAMgC,GAAIV,EAAOW,QAAjB,sBAEA,4BACE,gBACEC,IAAKH,EACLI,IAAG,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAAWf,MAChBkC,MAAM,QACNC,OAAO,UAET,+BAAKpB,QAAL,IAAKA,OAAL,EAAKA,EAAWf,SAChB,+CAAgBe,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAWd,WAA3B,QACA,sCACA,8BAAIc,QAAJ,IAAIA,OAAJ,EAAIA,EAAWV,YACf,oCACA,8BAAIU,QAAJ,IAAIA,OAAJ,EAAIA,EAAWT,aAEjB,4BACE,qDACA,2BACE,yBACE,SAAC,KAAD,CAAMwB,GAAG,OAAT,sBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,+BAIN,SAAC,EAAAM,SAAD,WACE,SAAC,KAAD,QAIP,C","sources":["components/Api/fetch-movie-details.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3e1aa277fd6b8a3cd0a3e29dfce20a5c';\n\nconst fetchMovieDetails = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(URL);\n    const data = response.data;\n\n    const smallPoster = data.poster_path;\n    const title = data.title;\n    const user_score = Math.round(data.vote_average * 10);\n    const overview = data.overview;\n    const genres = data.genres.map(genre => genre.name).join(', ');\n    const id = data.id;\n\n    return {\n      smallPoster,\n      title,\n      user_score,\n      overview,\n      genres,\n      id,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { fetchMovieDetails };\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useLocation, Link, useParams, Outlet } from 'react-router-dom';\n\nimport { fetchMovieDetails } from 'components/Api/fetch-movie-details';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState();\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const goBack = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function getMovieInfo() {\n      await fetchMovieDetails(movieId)\n        .then(response => {\n          setMovieInfo(response);\n        })\n        .catch(error => console.log(error));\n    }\n    getMovieInfo();\n  }, [movieId]);\n\n  const posterPath = `https://image.tmdb.org/t/p/original/${movieInfo?.smallPoster}`;\n\n  return (\n    <>\n      <Link to={goBack.current}>go back</Link>\n\n      <div>\n        <img\n          src={posterPath}\n          alt={movieInfo?.title}\n          width=\"360px\"\n          height=\"auto\"\n        ></img>\n        <h1>{movieInfo?.title}</h1>\n        <p>User Score: {movieInfo?.user_score}%</p>\n        <h2>Overview</h2>\n        <p>{movieInfo?.overview}</p>\n        <h3>Genres</h3>\n        <p>{movieInfo?.genres}</p>\n      </div>\n      <div>\n        <h3>Additional information:</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["fetchMovieDetails","movieId","URL","axios","response","data","smallPoster","poster_path","title","user_score","Math","round","vote_average","overview","genres","map","genre","name","join","id","console","log","useState","movieInfo","setMovieInfo","location","useLocation","useParams","goBack","useRef","state","from","useEffect","then","catch","error","getMovieInfo","posterPath","to","current","src","alt","width","height","Suspense"],"sourceRoot":""}